@model GraduationProject.Models.Profile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}
<h2 style="margin-top:100px;">@ViewBag.Title.</h2>
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<hr />
@using (Html.BeginForm("Edit", "Profiles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal JobEditDiv">
    <div class="alert alert-danger" id="errorDiv" style="display:none;">
        <span id="viewError"></span>
    </div>

    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.img)

    <div class="form-group">
        @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="img" id="MyImage" />
            @Html.ValidationMessageFor(model => model.img)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control", @id = "Bio" } })
            @Html.ValidationMessageFor(model => model.Bio)
        </div>
    </div>
    @if (Model.user.UserType == "Applicants")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Education)
                @Html.ValidationMessageFor(model => model.Education)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Experience)
                @Html.ValidationMessageFor(model => model.Experience)
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mail)
            @Html.ValidationMessageFor(model => model.Mail)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OtherLinks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OtherLinks)
            @Html.ValidationMessageFor(model => model.OtherLinks)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Country)
            @Html.ValidationMessageFor(model => model.Country)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>
    </div>

    @if (Model.user.UserType == "Applicants")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Birth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birth)
                @Html.ValidationMessageFor(model => model.Birth)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", String.Empty)
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("State", String.Empty)
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Military, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Military", String.Empty)
                @Html.ValidationMessageFor(model => model.Military)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="CV" id="MyCV" />
                @Html.ValidationMessageFor(model => model.CV)
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("My Profile", "Details", new { id = Model.id }, new { @class = "btn btn-default" })
</div>


<script>
    CKEDITOR.replace("Bio");
</script>

@section scripts{
<script>

    $(function () {

        $("#save").click(function () {
            //check image is chosen
            if ($("#MyImage").val() == "" && $("#MyCV").val() == "") {
                return true;
            }
            //check if iamge extension is valid
            if ($("#MyImage").val() != "") {
                var fileName = document.getElementById("MyImage").value;
                var extensionImg = fileName.substr(fileName.lastIndexOf('.') + 1);
                var validExtension = ['jpg', 'jpeg', 'png', 'bmp', 'gif', 'JPEG', 'JPG'];
                if ($.inArray(extensionImg, validExtension) == -1) {
                    $("#errorDiv").fadeIn();
                    $("#viewError").append("Please choose a correct image");
                    return false;
                }

                // check the size of image
                var myFileSize = document.getElementById("MyImage").files[0].size / 1024 / 1024;
                if (myFileSize > 5) {
                    $("#errorDiv").fadeIn();
                    $("#viewError").append("Please choose an image less than 5 mega byte");
                    return false;
                }
            }
            if ($("#MyCV").val() != "") {
                var fileName = document.getElementById("MyCV").value;
                var extensionCV = fileName.substr(fileName.lastIndexOf('.') + 1);
                var validExtension = ['pdf', 'PDF', 'docx', 'doc'];
                if ($.inArray(extensionCV, validExtension) == -1) {
                    $("#errorDiv").fadeIn();
                    $("#viewError").append("Please choose a correct CV");
                    return false;
                }

                // check the size of image
                var myFileSize = document.getElementById("MyCV").files[0].size / 1024 / 1024;
                if (myFileSize > 2) {
                    $("#errorDiv").fadeIn();
                    $("#viewError").append("Please choose an CV less than 2 mega byte");
                    return false;
                }
            }
        });
    });

</script>
    }

