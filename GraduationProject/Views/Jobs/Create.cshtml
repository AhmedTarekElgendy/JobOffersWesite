@model GraduationProject.Models.Job

@{
    ViewBag.Title = "Add New Job";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<h2 style="margin-top:100px;">@ViewBag.Title.</h2>
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<hr />
@using (Html.BeginForm("Create", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal JobCreate">
    <div class="alert alert-danger" id="errorDiv" style="display:none;">
        <span id="viewError"></span>
    </div>


    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(model => model.JobImage, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="upload" id="MyImage" />
            @Html.ValidationMessageFor(model => model.JobImage)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobTitle, new { @class = "control-label col-md-2" })
        <div class="col-md-10 ">
            @Html.EditorFor(model => model.JobTitle)
            @Html.ValidationMessageFor(model => model.JobTitle)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobContent, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.JobContent, new { htmlAttributes = new { @class = "form-control", @id = "JobContent" } })
            @Html.ValidationMessageFor(model => model.JobContent)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "Job Type", new { @class = "control-label col-md-2 " })
        <div class="col-md-10 ">
            @Html.DropDownList("CategoryId", String.Empty)
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Country, new { htmlAttributes = new { @class = "form-control"  } })
            @Html.ValidationMessageFor(model => model.Country)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.City, new { htmlAttributes = new { @class = "form-control"  } })
            @Html.ValidationMessageFor(model => model.City)
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Experience From", "Experience From", new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="margin-right:20px;">
            @Html.TextAreaFor(model => model.AgeFrom, new { htmlAttributes = new { @class = "form-control"  } })
            @Html.ValidationMessageFor(model => model.AgeFrom)
        </div>
        @Html.Label("Experience To", "Experience To", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.AgeTo, new { htmlAttributes = new { @class = "form-control"  } })
            @Html.ValidationMessageFor(model => model.AgeTo)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Gender", String.Empty)
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("State", String.Empty)
            @Html.ValidationMessageFor(model => model.State)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Military, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Military", String.Empty)
            @Html.ValidationMessageFor(model => model.Military)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-default" id="save" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back To Main Menu", "Index")
</div>


<script>
    CKEDITOR.replace("JobContent");
</script>



@section scripts{
    <script>

        $(function () {

            $("#save").click(function () {
                //check image is chosen
                if ($("#MyImage").val() == "") {
                    $("#errorDiv").fadeIn();
                    $("#viewError").append("Please complete empty fields");
                    return false;
                }
                //check if iamge extension is valid

                var fileName = document.getElementById("MyImage").value;
                var extensionImg = fileName.substr(fileName.lastIndexOf('.') + 1);
                var validExtension = ['jpg', 'jpeg', 'png', 'bmp', 'gif', 'JPEG', 'JPG'];
                if ($.inArray(extensionImg, validExtension) == -1) {
                    $("#errorDiv").fadeIn();
                    $("#viewError").append("Please choose a correct image");
                    return false;
                }

                // check the size of image
                var myFileSize = document.getElementById("MyImage").files[0].size / 1024 / 1024;
                if (myFileSize > 5) {
                    $("#errorDiv").fadeIn();
                    $("#viewError").append("Please choose an image less than 5 mega byte");
                    return false;
                }
            });
        });

    </script>
}
